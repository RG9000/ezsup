name: Build Rust Project with ncurses on Alpine

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker container
      run: |
        docker pull alpine:latest
        docker run --name alpine_build -v $(pwd):/workdir -d alpine:latest sleep infinity

    - name: Install dependencies and Rust
      run: |
        docker exec alpine_build apk add --no-cache build-base ncurses-dev curl
        docker exec alpine_build sh -c "curl https://sh.rustup.rs -sSf | sh -s -- -y"
        docker exec alpine_build /root/.cargo/bin/rustup target add x86_64-unknown-linux-musl

    - name: Build project with musl
      run: |
        docker exec alpine_build sh -c "cd /workdir && LIBNCURSESW='-lncurses' /root/.cargo/bin/cargo build --release --target x86_64-unknown-linux-musl"

    - name: Save the binary as artifact
      uses: actions/upload-artifact@v2
      with:
        name: my_rust_binary
        path: target/x86_64-unknown-linux-musl/release/your_binary_name

    - name: Cleanup Docker
      run: |
        docker stop alpine_build
        docker rm alpine_build
